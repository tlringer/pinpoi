apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    defaultConfig {
        applicationId "io.github.fvasco.pinpoi"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 10
        versionName "0.3.3"
        testApplicationId 'io.github.fvasco.pinpoi_test'
    }
    adbOptions {
        timeOutInMs 60000 // set timeout to 1 minute
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()
    mavenCentral()

    flatDir {
        dirs 'libs'
    }
}

configurations {
    checkerFrameworkJavac {
        description = 'a customization of the Open JDK javac compiler with additional support for type annotations'
    }

    checkerFrameworkAnnotatedJDK {
       description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
    checkerFramework {
       description = 'The Checker Framework: custom pluggable types for Java'
    }
}

// By default, don't run SPARTA. To run SPARTA, run ../gradlew compileDebugJavaWithJavac -PrunSparta=true
def runSparta = project.properties['runSparta'] ?: false

dependencies {
    // Support both options and env vars
    def spartaDir = System.env.SPARTA_CODE == null ?
            System.getProperty("SPARTA_CODE") : "$System.env.SPARTA_CODE"

    if (runSparta) {
        // checkerframework
        ext.checkerFrameworkVersion = '1.9.12'
        ext.jdkVersion = 'jdk7'
        checkerFrameworkAnnotatedJDK "org.checkerframework:${jdkVersion}:${checkerFrameworkVersion}"
        checkerFrameworkJavac "org.checkerframework:compiler:${checkerFrameworkVersion}"
        checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
        compile "org.checkerframework:checker:${checkerFrameworkVersion}"
        compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
    }

    compile fileTree(dir: spartaDir, include: ['*.jar'])
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile(name: 'ACG Library-release', ext:'aar')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:support-v4:23.2.0'
    compile 'com.android.support:recyclerview-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'
}

if (runSparta) {
    allprojects {
        // SPARTA integration
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile).all {
                options.debug = true
                options.compilerArgs = [
                        '-processor', 'sparta.checkers.FlowChecker',
                        '-AflowPolicy=flow/flow-policy',
                        '-AprintErrorStack'
                ]
                options.bootClasspath = System.getProperty("sun.boot.class.path") + ":" + options.bootClasspath
                options.fork = true
                options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.checkerFrameworkJavac.asPath}"]
            }
        }
    }
}

/**
 * Inference, for now:
 *
 * $CHECKER_INFERENCE/scripts/inference --typesystem sparta-source -m ROUNDTRIP --hacks --inPlace=true @files.txt -- -cp "/home/tringer/android/platforms/android-23/android.jar:/home/tringer/android/extras/android/support/v4/android-support-v4.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/animated-vector-drawable/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/support-vector-drawable/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/design/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/recyclerview-v7/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.android.support/support-v4/23.2.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/ACG\ Library-release/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.google.android.gms/play-services-location/8.4.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.google.android.gms/play-services-maps/8.4.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.google.android.gms/play-services-basement/8.4.0/jars/classes.jar:/home/tringer/app-evals/good/pinpoi/app/build/intermediates/exploded-aar/com.google.android.gms/play-services-base/8.4.0/jars/classes.jar:/home/tringer/sparta/sparta.jar"
 * $AFU/scripts/insert-annotations-to-source -v -i default.jaif @files.txt
 */